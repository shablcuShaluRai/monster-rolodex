{"version":3,"sources":["Components/Card/index.js","Components/CardList/index.js","Components/Search/index.js","App.js","index.js"],"names":["Card","monster","key","id","className","alt","src","name","email","CardList","props","monsters","map","SearchForm","search","setSearchValue","type","value","onChange","e","target","placeholder","App","useState","setMonster","getMosterData","a","fetch","response","json","result","useEffect","filteredMonster","filter","toLowerCase","includes","Search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAceA,G,MAXF,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACX,yBAAKC,IAAKD,EAAQE,GAAIC,UAAU,kBAC9B,yBACEC,IAAG,cAASJ,EAAQE,IACpBG,IAAG,+BAA0BL,EAAQE,GAAlC,eAEL,4BAAKF,EAAQM,MACb,2BAAIN,EAAQO,UCEDC,G,MARE,SAAAC,GAAK,OACpB,yBAAKN,UAAU,uBACZM,EAAMC,SAASC,KAAI,SAAAX,GAAO,OACzB,kBAAC,EAAD,CAAMC,IAAKD,EAAQE,GAAIF,QAASA,U,MCQvBY,MAZf,YAAiD,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,eAC5B,OACE,2BACEX,UAAU,SACVY,KAAK,SACLC,MAAOH,EACPI,SAAU,SAAAC,GAAC,OAAIJ,EAAeI,EAAEC,OAAOH,QACvCI,YAAY,oBCgBHC,MAtBf,WAAgB,IAAD,EACkBC,mBAAS,IAD3B,mBACNZ,EADM,KACIa,EADJ,OAEoBD,mBAAS,IAF7B,mBAENT,EAFM,KAEEC,EAFF,KAIPU,EAAa,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,8CADT,cACdC,EADc,gBAEGA,EAASC,OAFZ,OAEdC,EAFc,OAGpBN,EAAWM,GAHS,2CAAH,qDAMnBC,qBAAU,kBAAMN,MAAgB,IAEhC,IAAMO,EAAkBrB,EAASsB,QAAO,SAAAhC,GAAO,OAAIA,EAAQM,KAAK2B,cAAcC,SAASrB,EAAOoB,kBAC9F,OACE,yBAAK9B,UAAU,OACb,+CACA,kBAACgC,EAAD,CAAYrB,eAAgBA,EAAgBD,OAAQA,IACpD,kBAAC,EAAD,CAAUH,SAAUqB,M,MCf1BK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b2ee232e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nconst Card = ({ monster }) => (\n  <div key={monster.id} className=\"card-container\">\n    <img\n      alt={`alt ${monster.id}`}\n      src={`https://robohash.org/${monster.id}?set=set2`}\n    />\n    <h2>{monster.name}</h2>\n    <p>{monster.email}</p>\n  </div>\n)\n\nexport default Card;\n","import React from \"react\"\nimport Card from \"../Card\"\nimport \"./styles.css\"\n\nconst CardList = props => (\n  <div className=\"card-list-container\">\n    {props.monsters.map(monster => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </div>\n)\n\nexport default CardList\n","import React from \"react\";\nimport \"./styles.css\";\n\nfunction SearchForm({ search, setSearchValue }) {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      value={search}\n      onChange={e => setSearchValue(e.target.value)}\n      placeholder=\"search monster\"\n    />\n  );\n}\n\nexport default SearchForm;\n","import React, { useState, useEffect } from \"react\";\nimport CardList from \"./Components/CardList\"\nimport SearchForm from \"./Components/Search\"\n\nfunction App() {\n  const [monsters, setMonster] = useState([]);\n  const [search, setSearchValue] = useState(\"\")\n\n  const getMosterData = async() => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\")\n    const result  =  await response.json()\n    setMonster(result)\n  }\n\n  useEffect(() => getMosterData(),[]);\n\n  const filteredMonster = monsters.filter(monster => monster.name.toLowerCase().includes(search.toLowerCase()))\n  return (\n    <div className=\"app\">\n      <h1>Monster Rolodex</h1>\n      <SearchForm setSearchValue={setSearchValue} search={search} />\n      <CardList monsters={filteredMonster} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App.js\"\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}